struct ImplTest {
    a: OptRRef<isize>; // OptRRef<> is short for Option<RRef<>>
    b: [OptRRef<i32>; 32];
}

// NOTE: RRef<> in sys/lib/rref/
// The IDL compiler treats this as a black box, copies it, and hopes it'll compile
// It is user's responsibility to properly use the accessors
impl ImplTest {
    fn new() {
        // What about this case? (NOT RN)
    }

    fn foo(&mut self) {
        self.b[self.a] = 0;
        // > self.set_arr_b(self.get_a(), 0);
        // NOTE: do *not* focus on implementation translation atm
        // Type system *
        // Trait proxies
        // Creators
        // Accessors
    }

    fn bar(&mut self) {
        let not_self = ImplTest::new();
        not_self.a; // second case (do we translate, in this case (to getters and setters)?) (NOT RN)
    }
}